name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Clear useless artifacts
        uses: c-hive/gha-remove-artifacts@v1.2.0
        with:
          age: '2 days'
          
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Export .env file
        run: |
          touch .env
          echo REACT_APP_API_URL=${{secrets.REACT_APP_API_URL}} >> .env
          echo REACT_APP_FIREBASE_APIKEY=${{secrets.REACT_APP_FIREBASE_APIKEY}} >> .env
          echo REACT_APP_FIREBASE_AUTH_DOMAIN=${{secrets.REACT_APP_FIREBASE_AUTH_DOMAIN}} >> .env
          echo REACT_APP_FIREBASE_PROJECT_ID=${{secrets.REACT_APP_FIREBASE_PROJECT_ID}} >> .env
          echo REACT_APP_FIREBASE_STORAGE_BUCKET=${{secrets.REACT_APP_FIREBASE_STORAGE_BUCKET}} >> .env
          echo REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID}} >> .env
          echo REACT_APP_FIREBASE_APP_ID=${{secrets.REACT_APP_FIREBASE_APP_ID}} >> .env
          echo REACT_APP_FIREBASE_MEASUREMENT_ID=${{secrets.REACT_APP_FIREBASE_MEASUREMENT_ID}} >> .env
        working-directory: ./
      - run: |
          npm install --force
          npm run build
          rm -r node_modules
      - uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: ./build

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - uses: actions/download-artifact@v2
        with:
          name: frontend
          path: build
      - run: aws s3 sync ./build s3://s3-fe-uap-dev/ --acl public-read

